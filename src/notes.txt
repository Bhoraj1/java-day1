Connect Project to gitHub:
1. https://youtu.be/HM6CawhRvVQ?si=nBWaq4K9v4HfrarF
2. click VCL you don't see any commit icons in folder sections.

3. In java class name always start with Capital letter and function/method start with small letter.

--- 1.Variables ----
public class Main {
    public  static void main(String[] args){
    int herAge = 18;
    int myAge = herAge;
    System.out.println(herAge);
    }
}

--- 2. Types ----
-- 2.1. Primitive types: For storing simple values.
  type  Bytes   Range
  byte  1       [-128,127]
  sort  2       [-32k,32k]
  int   4       [-2B,2B]
  long  8       [
  float 4
  double 8
  char   2       A,B,C,...
  Boolean 1      true/false

 // Code Example :
 public class Main {
     public  static void main(String[] args){
     byte  age = 30;
     int   viewsCount = 134_567_489;
     long viewsCount2 = 3_123_456_789L;
     float price = 10.99F;
     char  letter  = 'A';
     boolean isEligable = true;
     System.out.println(letter);
     }
 }



  -- 2.2. Reference types: For Storing complex values/objects
  // Code Examples
  import java.util.Date;

  public class Main {
      public  static void main(String[] args){
      byte  age = 30;
      Date now = new Date();
      System.out.println(now);
      }
  }


 -- 2.3 -- Different Between premitive and Reference type

 public class Main {
     public  static void main(String[] args){
     byte  x = 1;
     byte y = x;
     x = 2;
         System.out.println(y);
     }
 }

 public class Main {
     public  static void main(String[] args){
         Point point1 = new Point(1,1);
         Point point2 = point1;
         point1.y = 2;
         System.out.println(point2);
     }
 }




 --- 3.Strings ---------

public class Main {
    public  static void main(String[] args){
      String message = "   Hello World" + "!!";
        String result = message.toUpperCase();
        System.out.println("Original:"+ message);
        System.out.println(result);
        System.out.println(message.length());
        System.out.println(message.indexOf("W"));
        System.out.println(message.replace("!", "*"));
        System.out.println(message.trim());

        String message = "Hello \nWorld";
           System.out.println(message);
    }
}

--- 4. Arrays -----
public class Main {
    public  static void main(String[] args){
     int[] numberss = {2,3,4,5,6,7};
        Arrays.sort(numberss);
        String results = Arrays.toString(numberss);
        System.out.println(results);

        // Anotehr
        int[] numbers = new int[5];
        numbers[0]=1;
        numbers[1]=2;
        String result =  Arrays.toString(numbers);
        System.out.println(result);
    }
}


--- Multi-dimensional Arrays -------

public class Main {
    public  static void main(String[] args){
//     int [][] numbers = new int[2][3];
    int [][] numbers = {{1,2,3},{4,5,6}};
        System.out.println(Arrays.deepToString(numbers));
    }
}

-- Constants ---------
public class Main {
    public  static void main(String[] args){
    final float pi = 3.14F;
    }
}


-- Arithmetic Expressions---------

public class Main {
    public  static void main(String[] args){
       int result = 10+3;
       int result2 = 10/3;
       double result3 = (double)10/(double)3;
       int x = 3;
//       x++;
//       int y = x++;
//       int y2 = ++x;

       int z = x + 2;
       x +=2;
        System.out.println(result);
        System.out.println(result2);
        System.out.println(result3);
        System.out.println(x);
//        System.out.println(y);
//        System.out.println(y2);
        System.out.println(z);
    }
}


-- Order of Operations ----------
public class Main {
    public  static void main(String[] args){
    int x = 10 + 3 * 2;
    int y = (10+3) * 2;
        System.out.println(x);
        System.out.println(y);

    }
}

-- Casting ---------
public class Main {
    public  static void main(String[] args){
        // Implicit/automatic casting
        // byte > short > int > long > float > double
//    short x = 1;
//    int y = x + 2;

//    double x = 1.1;
//    double y = x + 2;

//        double x = 1.1;
//        int y = (int)x + 2;

        String x = "1";
        int y = Integer.parseInt(x) + 2;
        System.out.println(y);

    }
}




--- Math Classes -------
public class Main {
    public  static void main(String[] args){
        int result = Math.round(1.1F);
        int result2 = (int)Math.ceil(1.1F);
        int result3 = Math.max(1,2);
        int result4 = (int)Math.round(Math.random()*100);

        System.out.println(result);
        System.out.println(result2);
        System.out.println(result3);
        System.out.println(result4);

    }
}

--- Formatting Numbers ------------
public class Main {
    public  static void main(String[] args){
//        NumberFormat currency = NumberFormat.getCurrencyInstance();
//        String result = currency.format(1234567.891);
//        System.out.println(result);

        NumberFormat percentage = NumberFormat.getPercentInstance();
        String result2 = percentage.format(0.1);
        System.out.println(result2);

        // Method chaining
        String result1 = NumberFormat.getPercentInstance().format(0.1);
        System.out.println(result1);

    }
}

---- Reading Input ------------
public class Main {
    public  static void main(String[] args){
        Scanner scanner  = new Scanner(System.in);
        System.out.print("Age: ");
        String name = scanner.nextLine().trim();
        System.out.println("Yor are " + name);
    }
}

----- Project 1 -----------
import java.text.NumberFormat;
import java.util.Scanner;

public class Main {
    public  static void main(String[] args){
        final byte MONTHS = 12;
        final byte PERCENTAGE = 100;

        Scanner scanner  = new Scanner(System.in);
        System.out.print("Principle: ");
        int principle = scanner.nextInt();


        System.out.print("Annual Interest Rate: ");
        float annualInterest = scanner.nextFloat();
        float monthlyInterest = annualInterest/PERCENTAGE / MONTHS;

        System.out.print("Period (Years): ");
        byte years = scanner.nextByte();
        int numberOfPayments = years * MONTHS;

        double mortgage = principle * (monthlyInterest * Math.pow(1+monthlyInterest,numberOfPayments))
                /(Math.pow(1+monthlyInterest,numberOfPayments)-1);

        String mortgageFormatted = NumberFormat.getCurrencyInstance().format(mortgage);
        System.out.println("Mortgage: " + mortgageFormatted);
    }
}


-------part 2 : Control Flow ----------
----  2.1: Comparison Operators --------
public class Main {
    public  static void main(String[] args){
        int x = 1;
        int y = 1;
        System.out.println(x == y);
        System.out.println(x !=y);
        System.out.println(x >=y);
    }
}

----  2.2 Logical Operators --------
public class Main {
    public  static void main(String[] args){
        int temperature = 22;
        boolean isWarm = temperature > 20 && temperature < 30;
        System.out.println(isWarm);

        boolean hasHighIncome = false;
        boolean hasGoodCredit = true;
        boolean hasCreminalRecord = true;
        boolean isEligable = (hasHighIncome || hasGoodCredit) && !hasCreminalRecord;
        System.out.println(isEligable);
    }
}

----  2.3 If Statemetns --------
public class Main {
    public  static void main(String[] args){
       int temperature = 19;
       if(temperature > 30){
           System.out.println("It's a hot day \n Drink plenty of Water");

       }
       else if(temperature > 20){
            System.out.println("It's Nice Day");

       }
       else {
            System.out.println("It's cold Day.");
        }

    }
}

----  2.4 Improved statements --------
 -------- prev -----
 public class Main {
     public  static void main(String[] args) {
         int income = 12_000;
         boolean hasHightIncome = true;
         if(income > 100_000)
           hasHightIncome = true;
         else
             hasHightIncome=false;
     }

 }

 -------- new ----
 public class Main {
     public  static void main(String[] args) {
         int income = 120_000;
         boolean hasHightIncome = (income > 100_000);
     }
 }

----  2.5 Ternary Operators --------
public class Main {
    public  static void main(String[] args) {
         int income = 120_000;
         String className = income > 100_000 ? "First" : "Economy";
    }

}

----  2.6 Switch statements --------
public class Main {
    public  static void main(String[] args) {
        String role = "admin";
        switch (role){
            case "admin":
                System.out.println("You are an admin");
                break;

            case "moderator":
                System.out.println("You are an moderator");
                break;

            default:
                System.out.println("You are and guest");
                break;
        }
    }

}


---- Project : 2 FizzBuzz -------
public class Main {
    public  static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Number: ");
        int number = scanner.nextInt();

        if(number % 5 ==0 && number % 3 ==0) {
            System.out.println("FizzBuzz");
        }
        else if(number % 5 ==0){
            System.out.println("Fizz");
        }else if(number % 3 ==0) {
            System.out.println("Buzz");
        }
        else{
            System.out.println(number);
        }

    }

}


----  2.7 For Loops --------
public class Main {
    public  static void main(String[] args) {
        for(int i = 0; i < 5; i++)
        System.out.println("Hello World" + i);
    }
}

----  2.8 While Loops --------
(Useful in situations where we don't know ahead of time how many time we
wanna repeat something)

public class Main {
    public  static void main(String[] args) {
//       int i = 0 ;
//       while(i<5){
//           System.out.println("Hello World" + i);
//           i ++;
//       }

       Scanner scanner  = new Scanner(System.in);
       String input = "";
       while (!input.equals("quit")){
           System.out.print("Input: ");
           input = scanner.next().toLowerCase();
           System.out.println(input);
       }

    }

}



----  2.9 Do..While Loops --------
public class Main {
    public  static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);
        String input = "";
        do {
            System.out.println("Input : ");
            input = scanner.next().toLowerCase();
            System.out.println(input);

        } while (!input.equals("quit"));
    }
}


---- 2.10: Break and Continue --------
-- continue will take the loop to begin
public class Main {
    public  static void main(String[] args) {
        Scanner scanner  = new Scanner(System.in);
        String input = "";
        while (true){
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            if(input.equals("pass"))
                continue;
            if(input.equals("quit"))
                break;
            System.out.println(input);
        }

    }
}

---- 2.11: For-each Loop --------
public class Main {
    public  static void main(String[] args) {
        String[] fruits = {"Apple","Mango","Orange"};

        // for(int i =0    ; i<fruits.length; i++)
        //   System.out.println(fruits[i]);

        for(String fruit : fruits)
            System.out.println(fruit);
    }
}

-- Mortgage Project Final Improved Version -------
public class Main {
    public  static void main(String[] args){
        final byte MONTHS = 12;
        final byte PERCENTAGE = 100;
        int principle = 0;
        float monthlyInterest = 0;
        int numberOfPayments = 0;

        Scanner scanner  = new Scanner(System.in);

        while(true) {
            System.out.print("Principle: ");
            principle = scanner.nextInt();
            if(principle >= 1000 & principle <= 1_000_000)
                break;
            System.out.println("Enter a value between 1000 and 10000");
        }

        while(true){
        System.out.print("Annual Interest Rate: ");
        float annualInterest = scanner.nextFloat();
        if(annualInterest >=1 && annualInterest <= 30){
            monthlyInterest = annualInterest/PERCENTAGE / MONTHS;
            break;
        }
            System.out.println("Enter a value between 1 and 30");
        }


        while(true){

        System.out.print("Period (Years): ");
        byte years = scanner.nextByte();
        if(years >=1 && years <=30){
            numberOfPayments = years * MONTHS;
            break;
        }
            System.out.println("Enter a value between 1 and 30");
        }

        double mortgage = principle * (monthlyInterest * Math.pow(1+monthlyInterest,numberOfPayments))
                /(Math.pow(1+monthlyInterest,numberOfPayments)-1);

        String mortgageFormatted = NumberFormat.getCurrencyInstance().format(mortgage);
        System.out.println("Mortgage: " + mortgageFormatted);
    }
}
